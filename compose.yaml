services:
  ecommerce-postgresql:
    image: postgres
    environment:
      POSTGRES_USER: ecommerce_user
      POSTGRES_PASSWORD: ecommerce_password
      POSTGRES_DB: ecommerce_db
    ports:
      - "5433:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -u ecommerce_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  warehouse-postgresql:
    image: postgres
    environment:
      POSTGRES_USER: warehouse_user
      POSTGRES_PASSWORD: warehouse_password
      POSTGRES_DB: warehouse_db
    ports:
      - "5434:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -u warehouse_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  source-db:
    build:
      context: ./source
    ports:
      - "21333:21333" 
    env_file: ./source/.env
    depends_on:
      - ecommerce-postgresql
      - kafka
    healthcheck:
      test: ["CMD", "python", "./source/healthcheck.py"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  warehouse-db:
    build:
      context: ./warehouse
    ports:
      - "21334:21334" 
    env_file: ./warehouse/.env
    # DEV
    develop:
      watch:
        - action: sync
          path: ./warehouse/etl.py
          target: /app/etl.py
        - action: sync
          path: ./warehouse/db/warehouse_db.py
          target: /app/db/warehouse_db.py
        - action: sync+restart
          path: ./warehouse/main.py
          target: /app/main.py
    depends_on:
      - warehouse-postgresql
      - kafka
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 5s
      timeout: 10s
      retries: 5
    # restart: always #disabled for DEV